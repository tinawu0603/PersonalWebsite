const elitismMarkdown = `
## Elitism in Tech Hinders Diversity and Belonging

“You’re not a real programmer if you don’t use Linux or Vim.” Aphorisms like this one exemplify the elitism for which the tech industry is notorious. This toxic elitist culture can be seen when there is only one accepted type of programmer. This accepted type of programmer often feigns superiority based on an arbitrary set of skills to demonstrate technical prowess, such as using Linux and Vim, having coded in Assembly, and being able to implement bubble sort from scratch. Without mastery of these arbitrary skills, a programmer’s “realness” is questioned by the elitists and, as a result, elitists may discredit their technical abilities. This elitism, the perception that one type of programmer is superior, is a key factor that hinders diversity and stifles belonging in the tech industry.


Before analyzing how toxic culture affects diversity in the tech industry, it is necessary to define what, exactly, “diversity” means. The conventional definition of diversity tends to limit diversity to the realms of race, ethnicity, and gender. The Office for Diversity, Equity, and Community Engagement at George Washington University defines diversity more broadly as “individual differences (e.g. life experiences, learning and working styles, personality types) and group/social differences (e.g. race, socio-economic status, class, gender, sexual orientation, country of origin, ability, intellectual traditions and perspectives, as well as cultural, political, religious, and other affiliations).” Individual differences such as unique life experiences and personality types are often overlooked, even though those differences are just as important as a person’s social differences.


Among the types of variability between individuals, those that are most overlooked in the tech industry are educational background and technical experience. Due to the recent growth of the tech industry, there is a significant number of industry professionals who did not obtain traditional 4-year Computer Science degrees. Instead, many programmers attended coding bootcamps or taught themselves programming. For the academic year of 2019-2020, US News (2019) published that the average cost of tuition and fees to attend a public, in-state college is $10,116, while attending a private college costs $36,801 dollars on average. Most non-tech professionals who are already in the workforce and considering entering the tech industry would not be able to afford taking 4 years off for an undergraduate program while also being able to afford hefty tuition bills. As a result, these professionals who want to leap into the tech industry turn to a more affordable option: coding bootcamps.


The downside of this decision is that elitist tech workers see engineers who come from coding bootcamps as inferior engineers. Instead of celebrating the courage and bravery of these engineers in taking such a big industry and career leap, elitists criticize bootcamp graduates for their lack of “native passion”. Elitists characterize bootcamp graduates as novices who were only drawn to the industry for better career prospects, and not because of a deep passion for the bizarre aspects of programming. The result of this judgement is the perception that bootcamp graduates are less authentic (Sharp, 2015). Despite the perceived inferiority of the skill and passion levels of their graduates, coding bootcamps create opportunities for people with a variety of backgrounds. If elitist tech workers continue to gate-keep the industry to only those who have written a compiler or accomplished some other complex academic task, then they are turning away potentially high-achieving programmers because their backgrounds don’t fit the cookie-cutter profile they expect.


Elitists generate this accepted cookie-cutter profile in their minds due to their need for homophily. Wikipedians (2020) define homophily as “the tendency of individuals to associate and bond with similar others.” Because of their homophilic nature, elitists exclude those who aren’t like them. Those who contribute to the elitism in the tech industry often fit the archetype of the “geek”, which is commonly associated with fixations on technical systems and having mostly online interests. To further explore the geek identity, Joseph Reagle (2016) states that “Many geeks were made to feel inferior when growing up”, and because of this suffering, those geeks feel obligated to maintain the tech sanctuary that was created by them and for them. As more mainstream programmers step into their tech sanctuary, geeks feel threatened and become insecure about being the outsider again.


The marginalization that geeks felt in their past contribute to their sense of privilege and superiority when they marginalize non-geeks. The non-geeks often include women, non-White individuals, and people who didn’t start programming until college or after college. Geeks point to the desire to work with people who understand them as a reason for their marginalization of others. However, this homophilic nature of tech elitists is one of the biggest reasons for the lack of diversity in tech. Although many blame the pipeline problem as the sole reason for the homogeny of the industry, Forbes’s Bonnie Marcus (2015) argues that “equal number of high school girls and boys are participating in STEM electives, and at Stanford and Berkeley, 50% of the introductory computer students are women.” So instead of blaming the pipeline problem, the tech industry should focus more on changing the elitist culture to attract more diversified candidates and keep them in an environment that fosters a sense of belonging.


To foster belonging in the minorities in the industry who do not possess typical geek identities, the tech industry must stop embracing and rewarding the elitism and entitlement of engineers. Adam Blue (2019) dives into the cultural consequences of this pretentiousness in his article “Normalizing engineers’ rockstar status is destroying tech companies.” Blue declares “That this behavior is accepted and written off as a necessary character trait for greatness by so many people is the end result of an engineering culture that at first excuses abusive behaviors and then points to them as proof of commitment, dedication, and brilliance.” This behavior can be seen publicly: the creator of Linux, a popular open source operating system, constantly insults and belittles volunteer contributors to the Linux code base because their abilities will never compare to his genius. Similarly, in tech recruiting, candidates are often turned away because they do not look like or behave like the hiring managers and the senior engineers who interviewed them. Often, these biased rejections are being written off as a poor “culture fit”.


The disappointing truth is that this specific profile that passes the “culture fit” test has been rewarded in the tech industry. In his article, Blue continues to explore the “social capital that can be traded on” from “being white/male/nerd/engineer/insider.” As a result of this exclusivity, talented engineers who do not possess the same social capital are being pushed out of the inner circle. In addition, this exclusivity creates a discriminatory culture in tech. For example, when there is an unspoken assumption that the only female engineer on a team should be taking notes during a meeting, the tech industry has clearly failed to foster a sense of belonging for engineers from minority backgrounds.


Fostering belonging is more than just increasing the representation of different social groups. It is more than simply making sure that at least 50% of the company are females or making sure that the company has a diverse representation of ethnic groups. To belong, defined by the Cambridge Dictionary, is to be in the right place or a suitable place, or to feel happy or comfortable in a situation. If the non-elitist newcomers are constantly getting their technical abilities questioned because they only know Python or because they didn’t study computer science in college, then they will constantly feel like they don’t belong. They will constantly feel like they’re a step behind the status quo. They’ll constantly feel like they’re an outsider in an industry that only worships and rewards the “10x engineer”, a pop-culture term describing an engineer that is “10 times” more productive than an average engineer.


So instead of hiring and praising engineers based on the speed of the algorithms they write during technical interviews, the tech industry should instead bring in engineers who are not only technically qualified but also those who may be non-traditional to provide new perspectives. To continue to exclude people who are different will simply persist the homogenous industry that exists right now. A homogenous industry making products for a heterogeneous society will undoubtedly result in implicitly biased products that don’t appeal to the wider audience. There is no doubt that technology and the industry behind it has been a boon for the lives of millions of people. But if the tech industry can become more like the audience that it serves, I believe that the products we create in the future will be even more accessible and life-changing.

### References

Belonging. (n.d.) In Cambridge Dictionary. Retrieved April 13, 2020, from https://dictionary.cambridge.org/us/dictionary/english/belonging

Blue, A. (2019, May 14). Normalizing engineers' rockstar status is destroying tech companies. Retrieved April 13, 2020, from https://thenextweb.com/podium/2019/05/11/normalizing-engineers-rockstar-status-is-destroying-tech-companies/

Diversity and Inclusion Defined. (n.d.). Retrieved April 13, 2020, from https://diversity.gwu.edu/diversity-and-inclusion-defined

Homophily. (2020, March 20). In Wikipedia. Retrieved April 13, 2020, from https://en.wikipedia.org/w/index.php?title=Homophily&oldid=946425368

Marcus, B. (2015, August 12). The Lack Of Diversity In Tech Is A Cultural Issue. Retrieved April 13, 2020, from https://www.forbes.com/sites/bonniemarcus/2015/08/12/the-lack-of-diversity-in-tech-is-a-cultural-issue/#aa021c779a21

McArthur, J. A. (2009). Digital Subculture: A Geek Meaning of Style. Journal of Communication Inquiry, 33(1), 58–70. doi: 10.1177/0196859908325676

Reagle, J. (2017, December 20). Nerd vs. bro: Geek privilege, idiosyncrasy, and triumphalism. Retrieved April 13, 2020, from https://reagle.org/joseph/2016/pr/privilege.html

Sharp, C. (2015, November 27). Software Developers' Growing Elitism Problem. Retrieved April 13, 2020, from https://techcrunch.com/2015/11/27/software-developers-growing-elitism-problem

Wadhwa, V. (2014, January 27). Enough is enough, Silicon Valley must end its elitism and arrogance. Retrieved April 13, 2020, from https://www.washingtonpost.com/news/innovations/wp/2014/01/27/enough-is-enough-silicon-valley-must-end-its-elitism-and-arrogance/


`;

export { elitismMarkdown };